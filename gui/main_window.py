# Copyright 2025 Schrodinger71
# Licensed under the Apache License, Version 2.0 (see LICENSE file)

import logging

import customtkinter as ctk

from gui.history_window import HistoryViewer
from gui.incident_tracker import IncidentTracker
from gui.organization_manager import OrganizationManager
from gui.profile import ProfileWindow
from gui.responsible_manager import ResponsibleManager
from gui.user_manager_window import UserManagerDialogEmbed


class MainWindow(ctk.CTkFrame):
    def __init__(self, master, db, user_info, on_logout):
        super().__init__(master)
        self.db = db
        self.user_info = user_info
        self.on_logout = on_logout

        role_colors = {
            "admin": {
                "bg": "#650606"
            },
            "user": {
                "bg": "#023047"
            }
        }
        colors = role_colors[user_info["role"]]

        master.title(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî {user_info['username']}")
        master.geometry("1150x620+300+100")
        master.resizable(True, True)

        # –¶–≤–µ—Ç —Ñ–æ–Ω–∞
        self.configure(fg_color=colors["bg"])
        self.pack(fill="both", expand=True)

        self.title_font = ctk.CTkFont(size=22, weight="bold")
        self.button_font = ctk.CTkFont(size=14, weight="bold")

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        self.inner_frame = ctk.CTkFrame(self, fg_color=colors["bg"], width=760, height=580)
        self.inner_frame.place(relx=0.5, rely=0.5, anchor="center")

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = ctk.CTkLabel(
            self.inner_frame,
            text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_info['username']}! –í–∞—à–∞ —Ä–æ–ª—å {user_info['role']}.",
            font=self.title_font,
            text_color="#FFFFFF"
        )
        self.title_label.pack(pady=(15, 5))

        # –í–∫–ª–∞–¥–∫–∏
        self.tabview = ctk.CTkTabview(self.inner_frame, width=720, height=460)
        self.tabview.pack(pady=(5, 5))

        self.tabs_config = [
            {"text": "üë§ –ü—Ä–æ—Ñ–∏–ª—å", "admin_only": False, "creator": self.create_profile_tab},
            {"text": "üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏", "admin_only": False, "creator": self.create_incident_tab},
            {"text": "üè∑ –°—Ç–∞—Ç—É—Å—ã –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤", "admin_only": False, "creator": self.create_statuses_tab},
            {"text": "üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", "admin_only": False, "creator": self.create_organizations_tab},
            {"text": "üëî –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ", "admin_only": False, "creator": self.create_responsibles_tab},
            {"text": "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "admin_only": True, "creator": self.create_users_tab},
            {"text": "üõ° –ú–µ—Ä—ã —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è", "admin_only": True, "creator": self.create_measures_tab},
            {"text": "üìú –ñ—É—Ä–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏–π", "admin_only": True, "creator": self.create_history_tab},
        ]

        self.tabs = {}

        for tab_conf in self.tabs_config:
            tab_name = tab_conf["text"]
            tab = self.tabview.add(tab_name)
            self.tabs[tab_name] = tab

            if tab_conf["admin_only"] and self.user_info["role"] != "admin":
                label = ctk.CTkLabel(tab, text="–î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –≤–∫–ª–∞–¥–∫–µ —Ä–∞–∑—Ä–µ—à—ë–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
                                     font=ctk.CTkFont(size=16), text_color="#888888")
                label.pack(expand=True, fill="both", pady=100)
            else:
                tab_conf["creator"](tab)

        self.logout_btn = ctk.CTkButton(
            self.inner_frame,
            text="üö™ –í—ã–π—Ç–∏",
            fg_color="#a20505",
            hover_color="#685b5a",
            text_color="white",
            command=self.logout,
            height=40,
            width=200,
            corner_radius=10,
            font=self.button_font
        )
        self.logout_btn.pack(pady=(10, 10), side="bottom")

        self.last_selected_tab = self.tabview.get()

    # –ú–µ—Ç–æ–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
    def create_profile_tab(self, tab):
        self.profile = ProfileWindow(tab, self.db, self.user_info)
        self.profile.pack(fill="both", expand=True)

    def create_incident_tab(self, tab):
        self.incident_tracker = IncidentTracker(tab, self.db, self.user_info)
        self.incident_tracker.pack(fill="both", expand=True)

    def create_statuses_tab(self, tab):
        pass

    def create_organizations_tab(self, tab):
        org_manager = OrganizationManager(tab, self.db, self.user_info)
        org_manager.pack(fill="both", expand=True)

    def create_responsibles_tab(self, tab):
        organizations = self.db.get_organizations()
        self.user_manager = ResponsibleManager(tab, self.db, self.user_info, organizations)
        self.user_manager.pack(fill="both", expand=True)

    def create_users_tab(self, tab):
        self.user_manager = UserManagerDialogEmbed(tab, self.db, self.user_info)
        self.user_manager.pack(fill="both", expand=True)

    def create_measures_tab(self, tab):
        pass

    def create_history_tab(self, tab):
        self.history_viewer = HistoryViewer(tab, self.db, self.user_info)
        self.history_viewer.pack(fill="both", expand=True)

    def logout(self):
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user_info['username']} –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")
        self.db.log_change(
            username=self.user_info['username'],
            —Ç–∞–±–ª–∏—Ü–∞="–°–∏—Å—Ç–µ–º–∞",
            –¥–µ–π—Å—Ç–≤–∏–µ="–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
            –ø–æ–ª–µ="–°—Ç–∞—Ç—É—Å",
            —Å—Ç–∞—Ä–æ–µ_–∑–Ω–∞—á–µ–Ω–∏–µ="–ê–∫—Ç–∏–≤–µ–Ω",
            –Ω–æ–≤–æ–µ_–∑–Ω–∞—á–µ–Ω–∏–µ="–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
        )
        self.on_logout()
